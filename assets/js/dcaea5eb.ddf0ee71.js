"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[1769],{52428:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>h,default:()=>c,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"guides/Marketplace","title":"Marketplace Guide","description":"Cloth Convertor is a topology transfer tool to wrap any 3D model to another, and transfer textures. It is used in the following steps.","source":"@site/docs/2_guides/8_Marketplace.md","sourceDirName":"2_guides","slug":"/guides/Marketplace","permalink":"/guides/Marketplace","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Deform3D Guide","permalink":"/guides/Deform3D"},"next":{"title":"Tutorials","permalink":"/category/tutorials"}}');var n=s(74848),o=s(28453);const i={sidebar_position:8},h="Marketplace Guide",l={},d=[{value:"1. Import A 3D Model",id:"1-import-a-3d-model",level:2},{value:"2. Import Another 3D Model",id:"2-import-another-3d-model",level:2},{value:"2. Edit The Models (Optional)",id:"2-edit-the-models-optional",level:2},{value:"4. Merge Meshes",id:"4-merge-meshes",level:2},{value:"5. Stitch Cloth (optional)",id:"5-stitch-cloth-optional",level:2},{value:"5. Wrap Source Mesh To Target Model",id:"5-wrap-source-mesh-to-target-model",level:2},{value:"Deform Using A Deformer Template",id:"deform-using-a-deformer-template",level:3},{value:"Deform By Point/Face Matching",id:"deform-by-pointface-matching",level:3},{value:"6. Transfer Textures",id:"6-transfer-textures",level:2},{value:"7. Export",id:"7-export",level:2}];function a(e){const r={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"marketplace-guide",children:"Marketplace Guide"})}),"\n",(0,n.jsx)(r.p,{children:"Cloth Convertor is a topology transfer tool to wrap any 3D model to another, and transfer textures. It is used in the following steps."}),"\n",(0,n.jsx)(r.p,{children:"A topology transfer tool to wrap any 3D model to another, and transfer textures, supporting file formats: input (fbx, obj, dae, dxf, 3ds) and export (fbx, obj)"}),"\n",(0,n.jsx)(r.h2,{id:"1-import-a-3d-model",children:"1. Import A 3D Model"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.a,{href:"/references/Import_Model/Model",children:"Import the target model"})," to the middle scene."]}),"\n",(0,n.jsx)(r.h2,{id:"2-import-another-3d-model",children:"2. Import Another 3D Model"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.a,{href:"/references/Import_Model/Model",children:"Import the source model"})," to the right scene."]}),"\n",(0,n.jsx)(r.h2,{id:"2-edit-the-models-optional",children:"2. Edit The Models (Optional)"}),"\n",(0,n.jsx)(r.p,{children:"This step is optional."}),"\n",(0,n.jsx)(r.p,{children:"You can edit the two models using any of the following operations in any order:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:["hide or delete unused meshes using operations ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Manage_Meshes",children:"1"})," ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Mouse",children:"2"}),"  ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Switch",children:"3"}),"  ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Duplicate_Copy",children:"4"}),"  ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Delete",children:"5"}),"  ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Hide",children:"6"}),"  ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Show",children:"7"})]}),"\n",(0,n.jsx)(r.p,{children:"For example, you may hide any clothes and weapons."}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Align",children:"Align"}),", ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Flip",children:"flip"})," ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Smooth_Decimate",children:"Smooth and decimate"}),", and ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Decompose_Use_Face_Groups",children:"decompose"})," the meshes"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:["translate/rotate/scale whole character using ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Gizmo",children:"Gizmo"})]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:["hide unused faces using operations ",(0,n.jsx)(r.a,{href:"/references/Edit_Faces/Mouse",children:"1"})," ",(0,n.jsx)(r.a,{href:"/references/Edit_Faces/Switch",children:"2"})," ",(0,n.jsx)(r.a,{href:"/references/Edit_Faces/Duplicate_Copy",children:"3"})]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"/references/Edit_Faces/Mouse#adjust-vertex-positions",children:"adjust vertex positions"})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"4-merge-meshes",children:"4. Merge Meshes"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Merge",children:"Merge the meshes"})," in the right scene."]}),"\n",(0,n.jsx)(r.h2,{id:"5-stitch-cloth-optional",children:"5. Stitch Cloth (optional)"}),"\n",(0,n.jsx)(r.p,{children:"This step is optional."}),"\n",(0,n.jsxs)(r.p,{children:["To keep the geometric structure of the mesh unchanged during deforming, you may sometimes need to ",(0,n.jsx)(r.a,{href:"/references/Edit_Faces/Stitch_Regions",children:"stitch some regions"})," of the mesh in the right scene."]}),"\n",(0,n.jsx)(r.h2,{id:"5-wrap-source-mesh-to-target-model",children:"5. Wrap Source Mesh To Target Model"}),"\n",(0,n.jsx)(r.p,{children:"Wrap the mesh in the right scene to the model in the middle scene by one of the following approaches:"}),"\n",(0,n.jsx)(r.h3,{id:"deform-using-a-deformer-template",children:"Deform Using A Deformer Template"}),"\n",(0,n.jsx)(r.p,{children:"This approach is recommended to try first as it is faster."}),"\n",(0,n.jsxs)(r.p,{children:["If you have a suitable deformer template which is either downloaded from the market place or ",(0,n.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Deform_Using_Templates",children:"generated"}),"  previously,  ",(0,n.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Deform_Using_Templates",children:"import"})," and ",(0,n.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Deform_Using_Templates",children:"apply the template"}),". The mesh in the right scene will automatically deform to wrap the model in the middle scene."]}),"\n",(0,n.jsx)(r.h3,{id:"deform-by-pointface-matching",children:"Deform By Point/Face Matching"}),"\n",(0,n.jsxs)(r.p,{children:["Using the operations ",(0,n.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Link_Unlink_Points",children:"1"}),"  ",(0,n.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Export_Import_Linked_Points",children:"2"})," ",(0,n.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Deform_Using_Points_Faces",children:"3"}),"  ",(0,n.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Deform_Using_Points_Faces",children:"4"}),", deform the source mesh to wrap the target model completely."]}),"\n",(0,n.jsx)(r.h2,{id:"6-transfer-textures",children:"6. Transfer Textures"}),"\n",(0,n.jsxs)(r.p,{children:["Click the ",(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Transfer_Textures",children:'"Transfer Textures"'})," button. The textures of the target model will be transferred to the source mesh"]}),"\n",(0,n.jsx)(r.h2,{id:"7-export",children:"7. Export"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Export",children:"export the source mesh"})," or its ",(0,n.jsx)(r.a,{href:"/references/Edit_Faces/Export",children:"some faces"})," to a fbx or obj file."]})]})}function c(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>h});var t=s(96540);const n={},o=t.createContext(n);function i(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function h(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);
"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[9708],{80470:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"references/Edit_Export_Meshes/Export","title":"Export Model","description":"Clicking this button exports selected meshes, or all visible meshes if no meshes are selected, to a file. When a skeletal model is exported, its skeleton and skin weights are also exported.","source":"@site/docs/references/2_Edit_Export_Meshes/20_Export.md","sourceDirName":"references/2_Edit_Export_Meshes","slug":"/references/Edit_Export_Meshes/Export","permalink":"/references/Edit_Export_Meshes/Export","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20},"sidebar":"tutorialSidebar","previous":{"title":"Set/Transfer Skeleton","permalink":"/references/Edit_Export_Meshes/Set_Transfer_Skeleton"},"next":{"title":"Export Assets","permalink":"/references/Edit_Export_Meshes/Export_Assets"}}');var s=i(74848),l=i(28453);const r={sidebar_position:20},d="Export Model",o={},h=[{value:"skeletal model -&gt; fbx",id:"skeletal-model---fbx",level:2},{value:"FBX File Format Version",id:"fbx-file-format-version",level:3},{value:"Type",id:"type",level:3},{value:"Embed Media",id:"embed-media",level:3},{value:"Remove Unused Bones",id:"remove-unused-bones",level:3},{value:"Export LOD Groups",id:"export-lod-groups",level:3},{value:"Export As A Static Model",id:"export-as-a-static-model",level:3},{value:"Axis System",id:"axis-system",level:3},{value:"System Unit",id:"system-unit",level:3},{value:"Retarget To",id:"retarget-to",level:3},{value:"Upgrade Skeleton",id:"upgrade-skeleton",level:3},{value:"Keep Original Node Properties",id:"keep-original-node-properties",level:3},{value:"static model -&gt; fbx",id:"static-model---fbx",level:2},{value:"static model -&gt; obj",id:"static-model---obj",level:2},{value:"character -&gt; avt",id:"character---avt",level:2},{value:"character shape -&gt; as",id:"character-shape---as",level:2}];function a(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"export-model",children:"Export Model"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:i(83113).A+"",width:"978",height:"331"})}),"\n",(0,s.jsx)(t.p,{children:"Clicking this button exports selected meshes, or all visible meshes if no meshes are selected, to a file. When a skeletal model is exported, its skeleton and skin weights are also exported."}),"\n",(0,s.jsx)(t.p,{children:"The supported file formats and exported data types depend on the tool and scene as described in the following table:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"right"},children:"Tool"}),(0,s.jsx)(t.th,{style:{textAlign:"right"},children:"Middle Scene"}),(0,s.jsx)(t.th,{style:{textAlign:"right"},children:"Right Scene"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"Dress3D"}),(0,s.jsxs)(t.td,{style:{textAlign:"right"},children:["skeletal model -> fbx",(0,s.jsx)("br",{}),"static model -> obj"]}),(0,s.jsxs)(t.td,{style:{textAlign:"right"},children:["skeletal model -> fbx",(0,s.jsx)("br",{}),"static model -> obj"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"Character Convertor"}),(0,s.jsxs)(t.td,{style:{textAlign:"right"},children:["skeletal model -> fbx",(0,s.jsx)("br",{}),"static model -> obj"]}),(0,s.jsxs)(t.td,{style:{textAlign:"right"},children:["character -> avt",(0,s.jsx)("br",{}),"character shape -> as"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"Cloth Convertor"}),(0,s.jsxs)(t.td,{style:{textAlign:"right"},children:["skeletal or static model -> fbx",(0,s.jsx)("br",{}),"static model -> obj"]}),(0,s.jsxs)(t.td,{style:{textAlign:"right"},children:["character -> avt; ",(0,s.jsx)("br",{}),"character shape -> as"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"Skeleton Transfer"}),(0,s.jsxs)(t.td,{style:{textAlign:"right"},children:["character -> avt",(0,s.jsx)("br",{}),"character shape -> as"]}),(0,s.jsxs)(t.td,{style:{textAlign:"right"},children:["character -> avt",(0,s.jsx)("br",{}),"character shape -> as"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"Deform3D"}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"static model -> fbx or obj"}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"static model -> fbx or obj"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"skeletal-model---fbx",children:"skeletal model -> fbx"}),"\n",(0,s.jsx)(t.p,{children:"When exporting a skeletal model to a fbx file, the following configuration window is pop up:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:i(97502).A+"",width:"482",height:"381"})}),"\n",(0,s.jsx)(t.h3,{id:"fbx-file-format-version",children:"FBX File Format Version"}),"\n",(0,s.jsx)(t.p,{children:"The following versions are supported:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"FBX 2020"}),"\n",(0,s.jsx)(t.li,{children:"FBX 2019"}),"\n",(0,s.jsx)(t.li,{children:"FBX 2018"}),"\n",(0,s.jsx)(t.li,{children:"FBX 2016/2017"}),"\n",(0,s.jsx)(t.li,{children:"FBX 2014/2015"}),"\n",(0,s.jsx)(t.li,{children:"FBX 2013"}),"\n",(0,s.jsx)(t.li,{children:"FBX 2012"}),"\n",(0,s.jsx)(t.li,{children:"FBX 2011"}),"\n",(0,s.jsx)(t.li,{children:"FBX 2010"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'The default value is "FBX 2020".'}),"\n",(0,s.jsx)(t.h3,{id:"type",children:"Type"}),"\n",(0,s.jsx)(t.p,{children:'This is either "Binary" or "ASCII". If "ASCII" is selected, media can not be embedded.  The default value is "Binary".'}),"\n",(0,s.jsx)(t.h3,{id:"embed-media",children:"Embed Media"}),"\n",(0,s.jsx)(t.p,{children:'If this is checked, all media (images etc.) are embedded in the file. The default value is "checked".'}),"\n",(0,s.jsx)(t.h3,{id:"remove-unused-bones",children:"Remove Unused Bones"}),"\n",(0,s.jsx)(t.p,{children:'If this is checked, all bones not used by the exported meshes or faces are removed. The default value is "not checked".'}),"\n",(0,s.jsx)(t.h3,{id:"export-lod-groups",children:"Export LOD Groups"}),"\n",(0,s.jsx)(t.p,{children:"If this is checked, the names of all exported meshes are checked. If two or more meshes' names meet the following requirement:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'share a common non-empty prefix before "_LOD"'}),"\n",(0,s.jsx)(t.li,{children:'end with "_LOD" plus a non-negative integer (Level Of Details),\nthen these meshes are exported as LOD (Level Of Details) group with the common prefix plus "_LodGroup" as the group name and with a default LOD configuration.'}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'An example of the names of meshes exported to a LOD group ("Body_LodGroup") is:'}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Body_LOD0"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD1"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD2"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD3"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"It should be noted that the LOD numbers in a group must have the same number of digits. An example of two digits is:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Body_LOD00"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD01"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD02"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD10"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD21"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"It should be noted that the following names do not meet the requirement:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Body_LOD"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD0_0"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD1_0"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD2_0"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD3_0"}),"\n",(0,s.jsx)(t.li,{children:"BodyLOD0"}),"\n",(0,s.jsx)(t.li,{children:"BodyLOD1"}),"\n",(0,s.jsx)(t.li,{children:"BodyLOD2"}),"\n",(0,s.jsx)(t.li,{children:"BodyLOD3"}),"\n",(0,s.jsx)(t.li,{children:"_LOD0"}),"\n",(0,s.jsx)(t.li,{children:"_LOD1"}),"\n",(0,s.jsx)(t.li,{children:"_LOD2"}),"\n",(0,s.jsx)(t.li,{children:"_LOD3"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD-0"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD-1"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD-2"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD-3"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD_0"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD_1"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD_2"}),"\n",(0,s.jsx)(t.li,{children:"Body_LOD_3"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'The default value of this option is "checked".'}),"\n",(0,s.jsx)(t.h3,{id:"export-as-a-static-model",children:"Export As A Static Model"}),"\n",(0,s.jsx)(t.p,{children:'If this is checked, the model is exported as a static model, so skeleton and skin weights are not exported. The default value is "not checked".'}),"\n",(0,s.jsx)(t.h3,{id:"axis-system",children:"Axis System"}),"\n",(0,s.jsx)(t.p,{children:"The following systems are supported:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Clothy3D/MakeHuman"}),"\n",(0,s.jsx)(t.li,{children:"Mixamo"}),"\n",(0,s.jsx)(t.li,{children:"Unreal Engine"}),"\n",(0,s.jsx)(t.li,{children:"Unity"}),"\n",(0,s.jsx)(t.li,{children:"MayaYUp"}),"\n",(0,s.jsx)(t.li,{children:"MayaZUp"}),"\n",(0,s.jsx)(t.li,{children:"Max"}),"\n",(0,s.jsx)(t.li,{children:"Marvelous Designer"}),"\n",(0,s.jsx)(t.li,{children:"Daz3D"}),"\n",(0,s.jsx)(t.li,{children:"Blender"}),"\n",(0,s.jsx)(t.li,{children:"MotionBuilder"}),"\n",(0,s.jsx)(t.li,{children:"OpenGL"}),"\n",(0,s.jsx)(t.li,{children:"DirectX"}),"\n",(0,s.jsx)(t.li,{children:"Lightwave"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'The default is the axis system of the original imported model or "Unreal Engine".'}),"\n",(0,s.jsx)(t.h3,{id:"system-unit",children:"System Unit"}),"\n",(0,s.jsx)(t.p,{children:"This is the system unit used. The default is set corresponding to the axis system."}),"\n",(0,s.jsx)(t.h3,{id:"retarget-to",children:"Retarget To"}),"\n",(0,s.jsx)(t.p,{children:"If the skeleton of the original imported model  is among the following supported skeletons:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Clothy3D/MakeHuman"}),"\n",(0,s.jsx)(t.li,{children:"Mixamo"}),"\n",(0,s.jsx)(t.li,{children:"Mixamo Old"}),"\n",(0,s.jsx)(t.li,{children:"Unreal Engine 5"}),"\n",(0,s.jsx)(t.li,{children:"Unreal Engine 4"}),"\n",(0,s.jsx)(t.li,{children:"Unity Mecanim"}),"\n",(0,s.jsx)(t.li,{children:"Marvelous Designer V2"}),"\n",(0,s.jsx)(t.li,{children:"Daz3D G9"}),"\n",(0,s.jsx)(t.li,{children:"Daz3D G8"}),"\n",(0,s.jsx)(t.li,{children:"Daz3D G3"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"it can be re-targeted to any of other supported skeletons by renaming some bones so that the exported model can be animated by animations using the target skelton."}),"\n",(0,s.jsx)(t.p,{children:"The default is the skeleton of the original imported model."}),"\n",(0,s.jsx)(t.h3,{id:"upgrade-skeleton",children:"Upgrade Skeleton"}),"\n",(0,s.jsx)(t.p,{children:"If the exported skeleton and re-targeted skeleton are in the following table:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"right"},children:"Exported Skeleton"}),(0,s.jsx)(t.th,{style:{textAlign:"right"},children:"Re-targeted Skeleton"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"right"},children:["Clothy3D/MakeHuman",(0,s.jsx)("br",{}),"Mixamo",(0,s.jsx)("br",{}),"Mixamo Old",(0,s.jsx)("br",{}),"Unity Mecanim"]}),(0,s.jsxs)(t.td,{style:{textAlign:"right"},children:["Unreal Engine 4",(0,s.jsx)("br",{}),"Unreal Engine 5"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"Unreal Engine 4"}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"Unreal Engine 5"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"A dialog window is pop up  to ask if you want to upgrade the skeleton. If you want, the exported skeleton is upgraded to be compatible with the re-targeted skeleton by adding some bones which you may adjust if necessary."}),"\n",(0,s.jsx)(t.h3,{id:"keep-original-node-properties",children:"Keep Original Node Properties"}),"\n",(0,s.jsx)(t.p,{children:'If this is checked, the original fbx node properties are exported. The default value is "not checked".'}),"\n",(0,s.jsx)(t.h2,{id:"static-model---fbx",children:"static model -> fbx"}),"\n",(0,s.jsx)(t.p,{children:"When exporting a static model to a fbx file, a configuration window is pop up, showing only the following parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"FBX File Format Version"}),"\n",(0,s.jsx)(t.li,{children:"Type"}),"\n",(0,s.jsx)(t.li,{children:"Embed Media"}),"\n",(0,s.jsx)(t.li,{children:"Export As A LOD Group"}),"\n",(0,s.jsx)(t.li,{children:"Axis System"}),"\n",(0,s.jsx)(t.li,{children:"System Unit"}),"\n",(0,s.jsx)(t.li,{children:"Keep Original Node Properties"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"static-model---obj",children:"static model -> obj"}),"\n",(0,s.jsx)(t.p,{children:"When exporting a static model to a obj file, only text file is supported."}),"\n",(0,s.jsx)(t.h2,{id:"character---avt",children:"character -> avt"}),"\n",(0,s.jsxs)(t.p,{children:['Refer to "',(0,s.jsx)(t.a,{href:"/references/Edit_Faces/Processing_Flow/Export",children:"Export Asset"}),'" for details.']}),"\n",(0,s.jsx)(t.h2,{id:"character-shape---as",children:"character shape -> as"}),"\n",(0,s.jsx)(t.p,{children:'A file with extension ".as" stores the shape of an interchangeable base character.'})]})}function c(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},83113:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/UI_Edit_Meshes_Export-e98bcf47a89e49683f22c170185766b2.png"},97502:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/UI_Fbx_Export_Options-2353c1414b5117f3a066cfde79b718cf.png"},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>d});var n=i(96540);const s={},l=n.createContext(s);function r(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);
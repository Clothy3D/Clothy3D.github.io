"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[3091],{67185:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"references/Edit_Export_Meshes/Transfer_Textures","title":"Transfer Textures","description":"Clicking this button transfers textures of selected meshes, or all visible meshes if no meshes are selected, from the model (source) in other scene (middle or right) as follows.","source":"@site/docs/references/2_Edit_Export_Meshes/14_Transfer_Textures.md","sourceDirName":"references/2_Edit_Export_Meshes","slug":"/references/Edit_Export_Meshes/Transfer_Textures","permalink":"/references/Edit_Export_Meshes/Transfer_Textures","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":16,"frontMatter":{"sidebar_position":16},"sidebar":"tutorialSidebar","previous":{"title":"Decompose Meshes To Isolated Meshes","permalink":"/references/Edit_Export_Meshes/Decompose"},"next":{"title":"Synchronize Body Helpers","permalink":"/references/Edit_Export_Meshes/Sync"}}');var n=t(74848),i=t(28453);const o={sidebar_position:16},a="Transfer Textures",c={},h=[{value:"Transfer Process",id:"transfer-process",level:2},{value:"Automatic Configuration",id:"automatic-configuration",level:2}];function l(e){const s={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"transfer-textures",children:"Transfer Textures"})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{src:t(21663).A+"",width:"977",height:"321"})}),"\n",(0,n.jsx)(s.p,{children:"Clicking this button transfers textures of selected meshes, or all visible meshes if no meshes are selected, from the model (source) in other scene (middle or right) as follows."}),"\n",(0,n.jsx)(s.h2,{id:"transfer-process",children:"Transfer Process"}),"\n",(0,n.jsx)(s.p,{children:"Firstly a dialog window is pop up to get the configuration setting:"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{src:t(30727).A+"",width:"386",height:"310"})}),"\n",(0,n.jsx)(s.p,{children:"Then for each mesh (target), its corresponding faces of the source model are found using the following parameters:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"Min Distance"}),"\n",(0,n.jsx)(s.p,{children:"This is the minimal distance from a found face of the source model to the closest face of the target mesh."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"Max Distance"}),"\n",(0,n.jsx)(s.p,{children:"This is the maximal distance from a found face of the source model to the closest face of the target mesh."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:'Then for each original texture of the mesh, if its corresponding texture in the source model exists, it is firstly scaled by the "Texture Height Scale" and "Texture Width Scale" parameters, then the texture of the source model is transferred.'}),"\n",(0,n.jsx)(s.p,{children:'Finally if "Merge With Original Textures" is selected, the transferred texture is merged with the original texture using the "Merge Strip Width (pixels)" parameter.'}),"\n",(0,n.jsx)(s.h2,{id:"automatic-configuration",children:"Automatic Configuration"}),"\n",(0,n.jsxs)(s.p,{children:['If "Automatic Configuration" is checked, the configuration dialog window will not be displayed and its current setting will be used directly for future "Transfer Textures" operation. This can be changed using the ',(0,n.jsx)(s.a,{href:"/category/configuration",children:"Configuration"}),"  menu."]})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},30727:(e,s,t)=>{t.d(s,{A:()=>r});const r=t.p+"assets/images/UI_Edit_Meshes_Transfer_Texture_Window-239c39ab73f546f2163f7c85a9b3ea2d.png"},21663:(e,s,t)=>{t.d(s,{A:()=>r});const r=t.p+"assets/images/UI_Edit_Meshes_Transfer_Textures-2a70b935aeff78ea2e8dac62c9130641.png"},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var r=t(96540);const n={},i=r.createContext(n);function o(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);
"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[6393],{1270:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"guides/Character_Convertor","title":"Character Convertor Guide","description":"Character Convertor is a tool to import any rigged tetrapod base character, and export a corresponding interchangeable base character asset. It is used in the following steps.","source":"@site/docs/2_guides/4_Character_Convertor.md","sourceDirName":"2_guides","slug":"/guides/Character_Convertor","permalink":"/guides/Character_Convertor","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Dress3D Guide","permalink":"/guides/Dress3D"},"next":{"title":"Cloth Convertor Guide","permalink":"/guides/Cloth_Convertor"}}');var a=n(74848),s=n(28453);const i={sidebar_position:4},c="Character Convertor Guide",o={},h=[{value:"1. Import A Rigged Base Character",id:"1-import-a-rigged-base-character",level:2},{value:"2. Edit Imported Character (Optional)",id:"2-edit-imported-character-optional",level:2},{value:"3. Wrap An Interchangeable Base Character To It",id:"3-wrap-an-interchangeable-base-character-to-it",level:2},{value:"A. Deform Using A Deformer Template",id:"a-deform-using-a-deformer-template",level:3},{value:"B. Deform By Character Building and Point/Face Matching",id:"b-deform-by-character-building-and-pointface-matching",level:3},{value:"4. Configure and Process",id:"4-configure-and-process",level:2},{value:"5. Export",id:"5-export",level:2}];function l(e){const r={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"character-convertor-guide",children:"Character Convertor Guide"})}),"\n",(0,a.jsx)(r.p,{children:"Character Convertor is a tool to import any rigged tetrapod base character, and export a corresponding interchangeable base character asset. It is used in the following steps."}),"\n",(0,a.jsx)(r.mermaid,{value:'graph TD;\n    A@{ shape: doc, label: "Skeletal Character"} --\x3e N[Edit optionally] --\x3e M[Match];\n    M --\x3e F[Process] --\x3e H@{ shape: doc, label: "Interchangeable Character"};'}),"\n",(0,a.jsx)(r.h2,{id:"1-import-a-rigged-base-character",children:"1. Import A Rigged Base Character"}),"\n",(0,a.jsx)(r.p,{children:"Firstly prepare a fbx or dae file which contains a 3D rigged tetrapod base character you want to convert."}),"\n",(0,a.jsxs)(r.p,{children:["Then ",(0,a.jsx)(r.a,{href:"/references/Import_Model/Model",children:"import it"})," to the middle scene."]}),"\n",(0,a.jsx)(r.h2,{id:"2-edit-imported-character-optional",children:"2. Edit Imported Character (Optional)"}),"\n",(0,a.jsx)(r.p,{children:"This step is optional."}),"\n",(0,a.jsx)(r.p,{children:"You can edit the imported character using any of the following operations in any order:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsxs)(r.p,{children:["delete unused meshes using operations ",(0,a.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Manage_Meshes#delete",children:"1"})," and/or ",(0,a.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Delete",children:"2"}),"."]}),"\n",(0,a.jsx)(r.p,{children:"For example, you may delete any clothes and weapons."}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Duplicate_Copy",children:"duplicate"})," and ",(0,a.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Align",children:"align"})," the meshes"]}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsxs)(r.p,{children:["translate/rotate/scale meshes using ",(0,a.jsx)(r.a,{href:"/references/Edit_Export_Meshes/Gizmo",children:"gizmo"})]}),"\n",(0,a.jsx)(r.p,{children:"For example, you may need to translate the character to the center."}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsxs)(r.p,{children:["hide unused faces using operations ",(0,a.jsx)(r.a,{href:"/references/Edit_Faces/Mouse",children:"1"})," ",(0,a.jsx)(r.a,{href:"/references/Edit_Faces/Switch",children:"2"})," ",(0,a.jsx)(r.a,{href:"/references/Edit_Faces/Duplicate_Copy",children:"3"})]}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.a,{href:"/references/Edit_Faces/Mouse#adjust-vertex-positions",children:"adjust vertex positions"})}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.a,{href:"/references/Edit_Faces/SKeleton_Weight",children:"check and edit skeleton bones and skin weights"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"3-wrap-an-interchangeable-base-character-to-it",children:"3. Wrap An Interchangeable Base Character To It"}),"\n",(0,a.jsx)(r.p,{children:"The right scene always contains an interchangeable base character which you need to wrap to the imported character by one of the following approaches:"}),"\n",(0,a.jsx)(r.h3,{id:"a-deform-using-a-deformer-template",children:"A. Deform Using A Deformer Template"}),"\n",(0,a.jsx)(r.p,{children:"This approach is recommended to try first as it is faster."}),"\n",(0,a.jsx)(r.p,{children:"Firstly find a deformer template which can be obtained by one of the following means:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.p,{children:"download from marketplace"}),"\n",(0,a.jsx)(r.p,{children:"If the imported character is a popular character such as a Metahuman, you may find and download its deformer template from the marketplace which provides many templates."}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.p,{children:"get one generated previously"}),"\n",(0,a.jsxs)(r.p,{children:["If you have previously ",(0,a.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Deform_Using_Templates",children:"created a template"})," suitable for the character in the middle scene, get it."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(r.p,{children:["Then ",(0,a.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Deform_Using_Templates",children:"import and apply the template"}),". The character in the right scene will automatically deform to wrap the character in the middle scene."]}),"\n",(0,a.jsx)(r.h3,{id:"b-deform-by-character-building-and-pointface-matching",children:"B. Deform By Character Building and Point/Face Matching"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsxs)(r.p,{children:["Step 1. Set Up Initial Shape Using ",(0,a.jsx)(r.a,{href:"/category/build-character",children:"Character Builder"})," or ",(0,a.jsx)(r.a,{href:"/references/Import_Model/Shape",children:"Import A Shape"})]}),"\n",(0,a.jsx)(r.p,{children:"Set up the initial shape to match the imported character as close as possible."}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.p,{children:"Step 2. Deform by Point/Face Matching"}),"\n",(0,a.jsxs)(r.p,{children:["Using the operations ",(0,a.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Link_Unlink_Points",children:"1"}),"  ",(0,a.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Export_Import_Linked_Points",children:"2"})," ",(0,a.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Deform_Using_Points_Faces",children:"3"}),"  ",(0,a.jsx)(r.a,{href:"/references/Match_Mesh_To_Model/Deform_Using_Points_Faces",children:"4"}),",\ndeform the character to wrap the imported character completely."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(r.p,{children:["You can ",(0,a.jsx)(r.a,{href:"/guides/Character_Convertor#2-edit-imported-character-optional",children:"edit the imported character"})," at the same time to facilitate the wrapping."]}),"\n",(0,a.jsx)(r.h2,{id:"4-configure-and-process",children:"4. Configure and Process"}),"\n",(0,a.jsxs)(r.p,{children:["Follow the ",(0,a.jsx)(r.a,{href:"/category/processing-flow",children:"processing flow"}),", in each step:"]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.p,{children:"configure processing parameters"}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.p,{children:"do automatic processing"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"5-export",children:"5. Export"}),"\n",(0,a.jsxs)(r.p,{children:["In the last step of the processing flow, ",(0,a.jsx)(r.a,{href:"/references/Edit_Faces/Processing_Flow/Export",children:"export an interchangeable base character asset to disk"}),"."]})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>c});var t=n(96540);const a={},s=t.createContext(a);function i(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);